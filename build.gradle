buildscript {
    ext {
        springBootVersion = '2.5.1'
        managementVersion = '1.0.11.RELEASE'
        querydslVersion = '1.0.10'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "io.spring.gradle:dependency-management-plugin:$managementVersion"
        classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:$querydslVersion"
    }
}

allprojects {
    group = 'learn.jpa'
    version = ''
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: "com.ewerk.gradle.plugins.querydsl"

    ext {
        querydslDir = "$buildDir/generated/querydsl"
    }

    repositories {
        mavenCentral()
    }

    configurations {
        developmentOnly
        runtimeClasspath {
            extendsFrom developmentOnly
        }
    }

    dependencies {
        implementation 'org.projectlombok:lombok:1.18.18'
        compileOnly(
                'org.projectlombok:lombok'
        )

        annotationProcessor(
                'org.projectlombok:lombok',
                'org.springframework.boot:spring-boot-configuration-processor'
        )

        implementation(
                'org.springframework.boot:spring-boot-starter-web',
                'org.springframework.boot:spring-boot-starter-data-jpa',
                'org.springframework.boot:spring-boot-starter-validation',
                'commons-io:commons-io:2.8.0',
                'com.querydsl:querydsl-jpa',
                'com.querydsl:querydsl-sql:4.0.0',
                'org.modelmapper:modelmapper:2.4.4',
        )

        runtimeOnly(
                'com.h2database:h2'
        )

        testImplementation(
                'org.springframework.boot:spring-boot-starter-test',
                'org.springframework.restdocs:spring-restdocs-mockmvc'
        )

        testImplementation("org.springframework.boot:spring-boot-starter-test") {
            exclude group: "junit", module: "junit"
        }
    }

    test {
        useJUnitPlatform()
    }

    querydsl {
        jpa = true
        querydslSourcesDir = querydslDir
    }

    sourceSets {
        main.java.srcDir querydslDir
    }

    configurations {
        querydsl.extendsFrom compileClasspath
    }

    compileQuerydsl {
        options.annotationProcessorPath = configurations.querydsl
    }
}

['Kang-Minhyung', 'Lee-Yuhyun', 'Lee-Seungjae', 'Han-Changhun'].each {
    project(it) {
        bootJar.enabled(false)
        jar.enabled(true)
    }
}
